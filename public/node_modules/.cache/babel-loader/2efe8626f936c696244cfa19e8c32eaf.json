{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arobi\\\\documents\\\\lambda-calculator\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // STEP 4 - import the button and display components\n// Don't forget to import any extra css/scss files you build into the correct component\n\nimport { Operators } from \"./components/ButtonComponents/OperatorButtons/Operators\";\nimport { Numbers } from \"./components/ButtonComponents/NumberButtons/Numbers\";\nimport { Specials } from \"./components/ButtonComponents/SpecialButtons/Specials\";\nimport { Display } from \"./DisplayComponents/DisplayButtons/Display\"; // Logo has already been provided for you. Do the same for the remaining components\n\nimport Logo from \"./components/DisplayComponents/Logo\";\n\nfunction App() {\n  // STEP 5 - After you get the components displaying using the provided data file, write your state hooks here.\n  // Once the state hooks are in place write some functions to hold data in state and update that data depending on what it needs to be doing\n  // Your functions should accept a parameter of the the item data being displayed to the DOM (ie - should recieve 5 if the user clicks on\n  // the \"5\" button, or the operator if they click one of those buttons) and then call your setter function to update state.\n  // Don't forget to pass the functions (and any additional data needed) to the components as props\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Display, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Specials, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Operators, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Numbers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\arobi\\documents\\lambda-calculator\\src\\App.js"],"names":["React","useState","Operators","Numbers","Specials","Display","Logo","App"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP,C,CACA;AACA;;AACA,SAASC,SAAT,QAA0B,yDAA1B;AACA,SAASC,OAAT,QAAwB,qDAAxB;AACA,SAASC,QAAT,QAAyB,uDAAzB;AACA,SAASC,OAAT,QAAwB,4CAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,qCAAjB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,EAGJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHI,EAIA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAFF,CADF;AAWD;;AAED,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./App.css\";\r\n// STEP 4 - import the button and display components\r\n// Don't forget to import any extra css/scss files you build into the correct component\r\nimport { Operators } from \"./components/ButtonComponents/OperatorButtons/Operators\";\r\nimport { Numbers } from \"./components/ButtonComponents/NumberButtons/Numbers\";\r\nimport { Specials } from \"./components/ButtonComponents/SpecialButtons/Specials\";\r\nimport { Display } from \"./DisplayComponents/DisplayButtons/Display\";\r\n// Logo has already been provided for you. Do the same for the remaining components\r\nimport Logo from \"./components/DisplayComponents/Logo\";\r\n\r\nfunction App() {\r\n  // STEP 5 - After you get the components displaying using the provided data file, write your state hooks here.\r\n  // Once the state hooks are in place write some functions to hold data in state and update that data depending on what it needs to be doing\r\n  // Your functions should accept a parameter of the the item data being displayed to the DOM (ie - should recieve 5 if the user clicks on\r\n  // the \"5\" button, or the operator if they click one of those buttons) and then call your setter function to update state.\r\n  // Don't forget to pass the functions (and any additional data needed) to the components as props\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Logo />\r\n      <div className=\"App\">\r\n        <Display />\r\n <Specials /> \r\n  <Operators /> \r\n      <Numbers />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}